*WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*
*WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*

This software is pre-alpha!

About half of planned functionality is implemented. Unit test coverage is less than 5%.

*The exposed API is in flux.*

*WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*
*WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*

* =MRPTree= (MR 2^P Tree)

=MRPTree= is C++ library implementing a data structure that is a generalization of the quadtree/octree concept to any dimension.
  - This single data structure is capable of representing quadtree-like structures in any dimension -- with no code modifications.
  - The resulting code is both less complex and easier to use than traditional tree based data structures.
  - Many tree operations are transformed into simple integer manipulation, and thus are much faster than tree operations.

You can read more about the way the data structure works here: [[https://richmit.github.io/MRPTree/tree_theory/trees.html][2^P Tree Theory]]

* Repository Contents (Current & Planned)

 - [[https://richmit.github.io/MRPTree/tree_theory/trees.html][Documentation about how data structure works]]
 - [[https://richmit.github.io/MRPTree/func-viz/func-viz.html][Example code for mathematical function visualization]]
 - [[https://richmit.github.io/MRPTree/roadmap.html][Development roadmap]]
 - The =MRPTree= itself (See: [[https://github.com/richmit/MRPTree/blob/main/lib/MR_rect_tree.hpp][lib/MR_rect_tree.hpp]])
 - Several examples of mathematical function visualization illustrating MRPTree in 1, 2, & 3 dimensions
 - An unstructured cell-complex/mesh library (See: [[https://github.com/richmit/MRPTree/blob/main/lib/MR_cell_cplx.hpp][lib/MR_cell_cplx.hpp]])
 - A library to tessellate an =MR_rect_tree= object into an =MR_cell_cplx= object (See: [[https://github.com/richmit/MRPTree/blob/main/lib/MR_rt_to_cc.hpp][lib/MR_rt_to_cc.hpp]])

* Build & Test Notes

 - MSYS2 on Windows 11:
   - g++: (Rev3, Built by MSYS2 project) 14.1.0
   - clang: 18.1.6
   - cmake: 3.29.5
   - boost: 1.85.0-2 (For unit tests)
 - Debian 12.6
   - g++: (Debian 14-20240330-1) 14.0.1 20240330 (experimental) [master r14-9728-g6fc84f680d0]
   - cmake: 3.25.1
   - boost: 1.83
 - Windows 11
   - Microsoft Visual Studio Community 2022 Version 17.10.5
   - cmake: 3.29.5
   - boost: I haven't tried to integrate with boost yet!

Have fun!!

-mitch
