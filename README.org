*WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*
*WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*

This software is pre-alpha!

About half of planned functionality is implemented. Unit test coverage is less than 5%.

*The exposed API is in flux.*

Items below for which I have not yet started working are marked (*TBD*).

The source code files document numerous TODO items.

*WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*
*WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*


* =MRPTree= (MR 2^P Tree)

=MRPTree= is C++ library implementing a data structure that is a generalization of the
[[https://en.wikipedia.org/wiki/Quadtree][quadtree]]/[[https://en.wikipedia.org/wiki/Octree][octree]]
concept to any dimension.
  - This single data structure is capable of representing quadtree-like structures in any dimension -- with no code modifications.
  - The resulting code is both less complex and easier to use than traditional tree based data structures.
  - Many tree operations are transformed into simple integer manipulation, and thus are much faster than tree operations.

You can read more about the way the data structure works here: [[https://richmit.github.io/MRPTree/tree_theory/trees.html][2^P Tree Theory]]

* Repository Contents (Current & Planned)

 - [[https://richmit.github.io/MRPTree/tree_theory/trees.html][Documentation about how data structure works]]
 - [[https://richmit.github.io/MRPTree/func-viz/func-viz.html][Some notes one the examples and mathematical function visualization]]
 - The =MRPTree= itself (See the single header file: =lib/MR_cell_cplx.hpp=)
 - Several examples of mathematical function visualization illustrating MRPTree in 1, 2, & 3 dimensions
 - An unstructured cell-complex (similar to a [[https://en.wikipedia.org/wiki/Simplicial_complex][simplicial complex]]) library (See the single header file: =lib/MR_cell_cplx.hpp=)
 - A library to tessellate an =MR_rect_tree= object into an =MR_cell_cplx= object (See the single header file: =lib/MR_rt_to_cc.hpp=)

Have fun!!

-mitch
